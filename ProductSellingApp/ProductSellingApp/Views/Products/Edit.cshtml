@model ProductSellingApp.Models.ProductViewModel

@{
    ViewData["Title"] = "Edit Product";
}

<h2>Edit Product</h2>

<form asp-action="Edit" method="post" enctype="multipart/form-data">
    <input type="hidden" asp-for="Id" />

    <div class="form-group">
        <label asp-for="Name"></label>
        <input asp-for="Name" class="form-control" />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Quantity"></label>
        <input asp-for="Quantity" class="form-control" />
        <span asp-validation-for="Quantity" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="PricePerUnit"></label>
        <input asp-for="PricePerUnit" class="form-control" />
        <span asp-validation-for="PricePerUnit" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="CategoryId"></label>
        <select asp-for="CategoryId" class="form-control" asp-items="Model.Categories">
            <option value="">-- Select Category --</option>
        </select>
        <span asp-validation-for="CategoryId" class="text-danger"></span>
    </div>

    @* <div class="form-group">
        <label>Photo</label><br />
        @if (Model.ExistingPhotoBase64 != null)
        {
            <p>Available photo</p>
            <img src="@Model.ExistingPhotoBase64" alt="Product Photo" style="max-width: 200px; max-height: 200px;" />
        }
        else
        {
            <p>No photo available</p>
        }
        <input asp-for="Photo" type="file" class="form-control-file" />
        <span asp-validation-for="Photo" class="text-danger"></span>
    </div> *@

    <button type="submit" class="btn btn-primary">Save</button>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
